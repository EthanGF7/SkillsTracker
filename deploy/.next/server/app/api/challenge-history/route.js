"use strict";(()=>{var e={};e.id=236,e.ids=[236],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},430:(e,r,o)=>{o.r(r),o.d(r,{originalPathname:()=>y,patchFetch:()=>C,requestAsyncStorage:()=>u,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>h});var t={};o.r(t),o.d(t,{GET:()=>c,POST:()=>p});var a=o(3278),n=o(5002),s=o(4877),l=o(1309),i=o(9310);async function c(e){try{let{searchParams:r}=new URL(e.url),o=r.get("type");if(!o||!["daily","weekly"].includes(o))return l.NextResponse.json({error:"Tipo de reto no v\xe1lido",details:'El par\xe1metro type debe ser "daily" o "weekly"'},{status:400,headers:{"Content-Type":"application/json","Cache-Control":"no-store"}});let t=await (0,i.x7)(o);return l.NextResponse.json({type:o,count:t.length,challenges:t},{headers:{"Content-Type":"application/json","Cache-Control":"no-store"}})}catch(e){return console.error("Error al cargar el historial:",e),l.NextResponse.json({error:"Error al cargar el historial",details:e instanceof Error?e.message:"Error desconocido"},{status:500,headers:{"Content-Type":"application/json","Cache-Control":"no-store"}})}}async function p(e){try{let r=await e.json(),{type:o}=r;if(!o||!["daily","weekly"].includes(o))return l.NextResponse.json({error:"Tipo de reto no v\xe1lido",details:"El reto debe incluir un tipo v\xe1lido (daily/weekly)"},{status:400,headers:{"Content-Type":"application/json","Cache-Control":"no-store"}});let t=["id","title","description","rules","extraTip","skill","level","createdAt"].filter(e=>!r[e]);if(t.length>0)return l.NextResponse.json({error:"Datos de reto incompletos",details:`Faltan los siguientes campos: ${t.join(", ")}`},{status:400,headers:{"Content-Type":"application/json","Cache-Control":"no-store"}});let a={...r,skill:r.skill,level:r.level};return await (0,i.EJ)(a,o),l.NextResponse.json({status:"success",message:"Reto guardado correctamente",challenge:a},{headers:{"Content-Type":"application/json","Cache-Control":"no-store"}})}catch(e){return console.error("Error al guardar el reto:",e),l.NextResponse.json({error:"Error al guardar el reto",details:e instanceof Error?e.message:"Error desconocido"},{status:500,headers:{"Content-Type":"application/json","Cache-Control":"no-store"}})}}let d=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/challenge-history/route",pathname:"/api/challenge-history",filename:"route",bundlePath:"app/api/challenge-history/route"},resolvedPagePath:"C:\\Users\\ethan\\Downloads\\login-page (1) (3)\\login-page (1)\\app\\api\\challenge-history\\route.ts",nextConfigOutput:"standalone",userland:t}),{requestAsyncStorage:u,staticGenerationAsyncStorage:h,serverHooks:g}=d,y="/api/challenge-history/route";function C(){return(0,s.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:h})}},9310:(e,r,o)=>{async function t(e){try{let r=await fetch(`/api/challenges/${e}`);if(!r.ok)throw Error("Error al cargar los retos");let o=await r.json();return Array.isArray(o)?o:[]}catch(r){return console.error(`Error loading ${e} challenges:`,r),[]}}async function a(e,r){try{if(!(await fetch(`/api/challenges/${r}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).ok)throw Error("Error al guardar el reto")}catch(e){throw console.error(`Error saving ${r} challenge:`,e),Error("Error al guardar el reto")}}async function n(e,r){return!1}o.d(r,{EJ:()=>a,Fz:()=>n,x7:()=>t})}};var r=require("../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[140,833],()=>o(430));module.exports=t})();